<?php

/**
 * BaseArtigoAvaliacao
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $artigo_id
 * @property boolean $aprovada
 * @property string $parecer
 * @property integer $versao_proposta
 * @property Artigo $Artigo
 * 
 * @method integer         getArtigoId()        Returns the current record's "artigo_id" value
 * @method boolean         getAprovada()        Returns the current record's "aprovada" value
 * @method string          getParecer()         Returns the current record's "parecer" value
 * @method integer         getVersaoProposta()  Returns the current record's "versao_proposta" value
 * @method Artigo          getArtigo()          Returns the current record's "Artigo" value
 * @method ArtigoAvaliacao setArtigoId()        Sets the current record's "artigo_id" value
 * @method ArtigoAvaliacao setAprovada()        Sets the current record's "aprovada" value
 * @method ArtigoAvaliacao setParecer()         Sets the current record's "parecer" value
 * @method ArtigoAvaliacao setVersaoProposta()  Sets the current record's "versao_proposta" value
 * @method ArtigoAvaliacao setArtigo()          Sets the current record's "Artigo" value
 * 
 * @package    TCCtrl
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseArtigoAvaliacao extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('artigo_avaliacao');
        $this->hasColumn('artigo_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('aprovada', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => false,
             ));
        $this->hasColumn('parecer', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('versao_proposta', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));

        $this->option('type', 'MyISAM');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Artigo', array(
             'local' => 'artigo_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}